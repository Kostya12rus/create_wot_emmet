# uncompyle6 version 3.9.0
# Python bytecode version base 2.7 (62211)
# Decompiled from: Python 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
# Embedded file name: scripts/common/site-packages/future-0.18.2/future/backports/urllib/error.py
from __future__ import absolute_import, division, unicode_literals
from future import standard_library
from future.backports.urllib import response as urllib_response
__all__ = [
 b'URLError', b'HTTPError', b'ContentTooShortError']

class URLError(IOError):

    def __init__(self, reason, filename=None):
        self.args = (reason,)
        self.reason = reason
        if filename is not None:
            self.filename = filename
        return

    def __str__(self):
        return b'<urlopen error %s>' % self.reason


class HTTPError(URLError, urllib_response.addinfourl):
    __super_init = urllib_response.addinfourl.__init__

    def __init__(self, url, code, msg, hdrs, fp):
        self.code = code
        self.msg = msg
        self.hdrs = hdrs
        self.fp = fp
        self.filename = url
        if fp is not None:
            self.__super_init(fp, hdrs, url, code)
        return

    def __str__(self):
        return b'HTTP Error %s: %s' % (self.code, self.msg)

    @property
    def reason(self):
        return self.msg

    def info(self):
        return self.hdrs


class ContentTooShortError(URLError):

    def __init__(self, message, content):
        URLError.__init__(self, message)
        self.content = content